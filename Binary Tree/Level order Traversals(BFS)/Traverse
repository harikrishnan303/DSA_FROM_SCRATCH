/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        
        List<List<Integer>>l=new ArrayList<>();
        if(root==null)
        return l;
        Queue<TreeNode>queue=new LinkedList<>();
        queue.add(root);
        while(!queue.isEmpty())
        {
            List<Integer>l1=new ArrayList<>();
            int n=queue.size();
            for(int i=0;i<n;i++)
            {
                TreeNode current=queue.poll();
                l1.add(current.val);
                if(current.left!=null)
                queue.add(current.left);
                if(current.right!=null)
                queue.add(current.right);
            }
            l.add(l1);
        }
        return l;
    }
}
