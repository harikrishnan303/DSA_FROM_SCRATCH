Bubble sort algorithm same as selection sort uses two loops to sort the elements in a array such that it uses two loops.
The outer loop traverse from the i=0 to i=n-1.
The inner loops compares the current and next index if current greater than the next they are swapped such that last index is occupied by the 
highest number.
So the inner loop stopping condition is j<n-i-1.

Code:

  class Solution {
    public void bubbleSort(int[] arr) {
        // code here
        int n=arr.length;
        for(int i=0;i<n-1;i++)
        {
            for(int j=0;j<n-i-1;j++)
            {
                if(arr[j]>arr[j+1])
                {
                    int temp=arr[j];
                    arr[j]=arr[j+1];
                    arr[j+1]=temp;
                }
            }
            
        }
    }
}

Time Complexity :O(n)
Space Complexity:O(1)